{"version":3,"sources":["../src/vue-instant-page.js"],"names":["prefetcher","document","createElement","isSupported","relList","supports","isDataSaverEnabled","navigator","connection","saveData","lastTouchTimestamp","undefined","mouseoverTimer","urlToPreload","finalOptions","delayOnHover","useMousedown","useMousedownOnly","allowQueryString","allowExternalLinks","useWhitelist","install","Vue","options","Object","assign","buildPrefetcher","initializeEventListeners","rel","head","appendChild","eventListenersOptions","capture","passive","addEventListener","touchstartListener","bind","mouseoverListener","mousedownListener","event","performance","now","linkElement","target","closest","isPreloadable","touchendAndTouchcancelListener","href","preload","stopPreloading","mouseoutListener","setTimeout","relatedTarget","clearTimeout","dataset","origin","location","includes","protocol","search","hash","pathname","url","removeAttribute"],"mappings":"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","file":"vue-instant-page.js","sourcesContent":["const prefetcher = document.createElement('link');\nconst isSupported = prefetcher.relList && prefetcher.relList.supports && prefetcher.relList.supports('prefetch');\nconst isDataSaverEnabled = navigator.connection && navigator.connection.saveData;\n\nexport default {\n    lastTouchTimestamp: undefined,\n    mouseoverTimer: undefined,\n    urlToPreload: undefined,\n\n    finalOptions: {\n        /** Delay of mouse hover in milliseconds after when the prefetching can begin */\n        delayOnHover: 65,\n\n        /** Use mousedown as a prefetch trigger */\n        useMousedown: false,\n\n        /** Only use mousedown as a prefetch trigger, and disabled mouse hover */\n        useMousedownOnly: false,\n\n        /** All pages with a query string be preloaded when set to true */\n        allowQueryString: false,\n\n        /** External links arenâ€™t preloaded by default, to allow them all set this variable to true */\n        allowExternalLinks: false,\n\n        /** Only preload specific links when use whitelist is set to true */\n        useWhitelist: false,\n    },\n\n    /**\n     * Install the plugin\n     *\n     * @param Vue\n     * @param options\n     */\n    install(Vue, options) {\n        // If prefetch is not support or data saver is enabled, do not run this plugin at all.\n        if (!isSupported || isDataSaverEnabled) {\n            return;\n        }\n\n        // Update final options / settings\n        this.finalOptions = Object.assign(this.finalOptions, options);\n\n        this.buildPrefetcher();\n        this.initializeEventListeners();\n    },\n\n    /**\n     * Build the prefetcher node\n     */\n    buildPrefetcher() {\n        prefetcher.rel = 'prefetch';\n\n        // Append prefetcher to head of the document\n        document.head.appendChild(prefetcher);\n    },\n\n    /**\n     * Set event listeners based on options\n     */\n    initializeEventListeners() {\n        const eventListenersOptions = {\n            capture: true,\n            passive: true,\n        };\n\n        if (!this.finalOptions.useMousedownOnly) {\n            document.addEventListener('touchstart', this.touchstartListener.bind(this), eventListenersOptions);\n        }\n\n        if (!this.finalOptions.useMousedown) {\n            document.addEventListener('mouseover', this.mouseoverListener.bind(this), eventListenersOptions);\n        } else {\n            document.addEventListener('mousedown', this.mousedownListener.bind(this), eventListenersOptions);\n        }\n    },\n\n    /**\n     * Touch start event listener method\n     *\n     * @param event\n     */\n    touchstartListener(event) {\n        /* Chrome on Android calls mouseover before touchcancel so `lastTouchTimestamp`\n         * must be assigned on touchstart to be measured on mouseover. */\n        this.lastTouchTimestamp = performance.now();\n\n        const linkElement = event.target.closest('a');\n\n        if (!this.isPreloadable(linkElement)) {\n            return;\n        }\n\n        linkElement.addEventListener('touchcancel', this.touchendAndTouchcancelListener.bind(this), { passive: true });\n        linkElement.addEventListener('touchend', this.touchendAndTouchcancelListener.bind(this), { passive: true });\n\n        this.urlToPreload = linkElement.href;\n\n        this.preload(linkElement.href)\n    },\n\n    /**\n     * Stop preloading when touch ends or is cancelled\n     */\n    touchendAndTouchcancelListener() {\n        this.urlToPreload = undefined;\n\n        this.stopPreloading();\n    },\n\n    /**\n     * Start measuring the mouseover on an element's a tag.\n     *\n     * @param event\n     */\n    mouseoverListener(event) {\n        // Not sure what this does though\n        if (performance.now() - this.lastTouchTimestamp < 1100) {\n            return;\n        }\n\n        const linkElement = event.target.closest('a');\n\n        if (!this.isPreloadable(linkElement)) {\n            return;\n        }\n\n        linkElement.addEventListener('mouseout', this.mouseoutListener.bind(this), { passive: true });\n\n        this.urlToPreload = linkElement.href;\n\n        this.mouseoverTimer = setTimeout(() => {\n            this.preload(linkElement.href);\n\n            this.mouseoverTimer = undefined;\n        }, this.finalOptions.delayOnHover);\n    },\n\n    /**\n     * Mouse down event is trigger, so start preloading the element's a tag.\n     *\n     * @param event\n     */\n    mousedownListener(event) {\n        const linkElement = event.target.closest('a');\n\n        if (!this.isPreloadable(linkElement)) {\n            return;\n        }\n\n        linkElement.addEventListener('mouseout', this.mouseoutListener.bind(this), { passive: true });\n\n        this.urlToPreload = linkElement.href;\n\n        this.preload(linkElement.href);\n    },\n\n    /**\n     * The mouse over event is being cancelled, stop preloading at once.\n     *\n     * @param event\n     */\n     mouseoutListener(event) {\n        if (event.relatedTarget && event.target.closest('a') === event.relatedTarget.closest('a')) {\n            return;\n        }\n\n        if (this.mouseoverTimer) {\n            clearTimeout(this.mouseoverTimer);\n\n            this.mouseoverTimer = undefined;\n        }\n\n        this.urlToPreload = undefined;\n\n        this.stopPreloading();\n    },\n\n    /**\n     * Check if the given link element is up for preloading\n     *\n     * @param linkElement\n     * @returns {boolean}\n     */\n    isPreloadable(linkElement) {\n        // No element with href is found to preload\n        if (!linkElement || !linkElement.href) {\n            return false;\n        }\n\n        // Do not preload the current page\n        if (this.urlToPreload === linkElement.href) {\n            return false;\n        }\n\n        // When use whitelist is set to true, only load elements which contain the data-instant attribute\n        if (this.useWhitelist && !('instant' in linkElement.dataset)) {\n            return false;\n        }\n\n        // When query strings are not allow, return false unless the link element contains the data-instant attribute\n        if (!this.allowExternalLinks && linkElement.origin !== location.origin && !('instant' in linkElement.dataset)) {\n            return false;\n        }\n\n        // Only preload links when protocol / scheme is present\n        if (!['http:', 'https:'].includes(linkElement.protocol)) {\n            return false;\n        }\n\n        // Do not preload insecure link from secure website\n        if (linkElement.protocol === 'http:' && location.protocol === 'https:') {\n            return false;\n        }\n\n        // When query strings are not allow, return false unless the link element contains the data-instant attribute\n        if (!this.allowQueryString && linkElement.search && !('instant' in linkElement.dataset)) {\n            return false;\n        }\n\n        // Skip hash changes\n        if (linkElement.hash && linkElement.pathname + linkElement.search === location.pathname + location.search) {\n            return false;\n        }\n\n        // If data-noInstant attribute is found for a linkelement, do not preload\n        if ('noInstant' in linkElement.dataset) {\n            return false;\n        }\n\n        return true;\n    },\n\n    /**\n     * Start the preloading by adding the href attribute to the prefetch node\n     */\n    preload(url) {\n        prefetcher.href = url;\n    },\n\n    /**\n     * Stop the preloading by removing the href attribute from the prefetch node\n     */\n    stopPreloading() {\n        prefetcher.removeAttribute('href');\n    }\n}\n"]}